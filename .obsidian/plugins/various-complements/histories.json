{"是一个容器，因为它包含并且管理应用对象的生命周期":{"是一个容器，因为它包含并且管理应用对象的生命周期":{"currentFile":{"count":1,"lastUpdated":1693902585109}}},"中可以使用XML和Java注解组合这些对象。":{"中可以使用XML和Java注解组合这些对象。":{"currentFile":{"count":1,"lastUpdated":1693902591062}}},"singleton：在spring IoC容器仅存在一个Bean实例，Bean以单例方式存在，默认值":{"singleton：在spring IoC容器仅存在一个Bean实例，Bean以单例方式存在，默认值":{"currentFile":{"count":1,"lastUpdated":1693967311362}}},"Session共享一个Bean，不同Session使用不同的Bean，仅适用于WebApplicationContext环境":{"Session共享一个Bean，不同Session使用不同的Bean，仅适用于WebApplicationContext环境":{"currentFile":{"count":1,"lastUpdated":1693967358426}}},"一般用于Portlet应用环境，该作用域仅适用于WebApplicationContext环境":{"一般用于Portlet应用环境，该作用域仅适用于WebApplicationContext环境":{"currentFile":{"count":1,"lastUpdated":1693967371160}}},"依赖注入与容器本身耦合":{"依赖注入与容器本身耦合":{"currentFile":{"count":1,"lastUpdated":1694009954110}}},"能够被单独实例化并且你也能为它提供它所需的依赖。":{"能够被单独实例化并且你也能为它提供它所需的依赖。":{"currentFile":{"count":1,"lastUpdated":1694009984071}}},"，则注入失败时不会抛出异常":{"，则注入失败时不会抛出异常":{"currentFile":{"count":1,"lastUpdated":1694011640895}}},"AOP（面向切面编程）的支持，可以在":{"AOP（面向切面编程）的支持，可以在":{"currentFile":{"count":1,"lastUpdated":1694013088257}}},"面向切面编程，通过预编译或运行期动态代理实现程序功能的统一维护的一种技术":{"面向切面编程，通过预编译或运行期动态代理实现程序功能的统一维护的一种技术":{"currentFile":{"count":1,"lastUpdated":1694014242123}}},"AOP的实现方式":{"AOP的实现方式":{"currentFile":{"count":1,"lastUpdated":1694014268867}}},"等注解）、Springboot实际上通过":{"等注解）、Springboot实际上通过":{"currentFile":{"count":1,"lastUpdated":1694589908840}}},"IoC是设计思想，DI是实现方式":{"IoC是设计思想，DI是实现方式":{"currentFile":{"count":2,"lastUpdated":1695425085992}}},"Java配置":{"Java配置":{"currentFile":{"count":1,"lastUpdated":1694591123356}}},"cglib和jdk动态代理的区别？":{"cglib和jdk动态代理的区别？":{"currentFile":{"count":1,"lastUpdated":1694668307801}}},"等上层的功能。具体介绍如下":{"等上层的功能。具体介绍如下":{"currentFile":{"count":1,"lastUpdated":1694747060618}}},"的区别在于，":{"的区别在于，":{"currentFile":{"count":1,"lastUpdated":1694748498663}}},"一起使用，":{"一起使用，":{"currentFile":{"count":1,"lastUpdated":1694750487363}}},"AspectJ是什么":{"AspectJ是什么":{"currentFile":{"count":1,"lastUpdated":1694751227567}}},"的语言，更幸运的是，AspectJ与java程序完全兼容，几乎是无缝关联，因此对于有java编程基础的工程师，上手和使用都非常容易。":{"的语言，更幸运的是，AspectJ与java程序完全兼容，几乎是无缝关联，因此对于有java编程基础的工程师，上手和使用都非常容易。":{"currentFile":{"count":1,"lastUpdated":1694751267041}}},"间将切面代码编译到目标代码的，属于静态代理，通过修改代码来实现":{"间将切面代码编译到目标代码的，属于静态代理，通过修改代码来实现":{"currentFile":{"count":1,"lastUpdated":1694751286516}}},"，不仅仅是方法织入":{"，不仅仅是方法织入":{"currentFile":{"count":1,"lastUpdated":1694751312565}}},"java代码：需要@Configuration和@Bean":{"java代码：需要@Configuration和@Bean":{"currentFile":{"count":2,"lastUpdated":1694979130371}}},"@Valid":{"@Valid":{"currentFile":{"count":1,"lastUpdated":1694986511440}}},"等价于@RequestMapping":{"等价于@RequestMapping":{"currentFile":{"count":1,"lastUpdated":1694988298556}}},"注解修饰。":{"注解修饰。":{"currentFile":{"count":1,"lastUpdated":1694988763202}}},"@CreatedDate、@LastModifiedDate、@CreatedBy、@LastModifiedBy、@EnableJpaAuditing":{"@CreatedDate、@LastModifiedDate、@CreatedBy、@LastModifiedBy、@EnableJpaAuditing":{"currentFile":{"count":1,"lastUpdated":1694989219002}}},"Alibaba技术选型":{"Alibaba技术选型":{"currentFile":{"count":1,"lastUpdated":1695107448869}}},"架构：上一个分布式服务架构中，系统间耦合度变高，调用关系错综复杂，难以维护，":{"架构：上一个分布式服务架构中，系统间耦合度变高，调用关系错综复杂，难以维护，":{"currentFile":{"count":1,"lastUpdated":1695117936058}}},"缺失的组件。":{"缺失的组件。":{"currentFile":{"count":1,"lastUpdated":1695354074268}}},"guclno1@qq.com":{"guclno1@qq.com":{"currentFile":{"count":1,"lastUpdated":1695385024488}}},"file1.txt":{"file1.txt":{"currentFile":{"count":1,"lastUpdated":1695386273578}}},"删除dev2分支":{"删除dev2分支":{"currentFile":{"count":1,"lastUpdated":1695387018293}}},"强制推送到远程master分支":{"强制推送到远程master分支":{"currentFile":{"count":1,"lastUpdated":1695387477016}}},"master":{"master":{"currentFile":{"count":1,"lastUpdated":1695387827080}}},"创建仓库（初始化）":{"创建仓库（初始化）":{"currentFile":{"count":1,"lastUpdated":1695387950036}}},"鼠标滑过链接、标签时会有一个动画效果":{"鼠标滑过链接、标签时会有一个动画效果":{"currentFile":{"count":1,"lastUpdated":1695426838552}}},"享受这个功能":{"享受这个功能":{"currentFile":{"count":2,"lastUpdated":1695426923826}}}}